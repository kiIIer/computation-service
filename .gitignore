# Go-specific ignores
# Compiled binary files (Go generates these when you build)
*.exe
*.exe~
*.dll
*.so
*.dylib

# Go test binaries and coverage files
*.test
*.out
coverage.out

# Go dependency directories (if using older Go versions with GOPATH)
vendor/

# Go workspace file
go.work

# Rust-specific ignores
# Rust build artifacts (generated by Cargo)
target/
**/*.rs.bk
Cargo.lock  # Optional: Include if you don't want to commit dependency versions

# Rust shared library artifacts (since you're building a shared library for Go)
rust/libcompute.so
*.so
*.dylib

# macOS-specific ignores
# macOS Finder metadata files
.DS_Store
.AppleDouble
.LSOverride

# Thumbnails
._*

# Files that might appear on macOS
Icon

# Directories macOS might create
.Trashes
.fseventsd
.Spotlight-V100
.TemporaryItems

# GoLand-specific ignores (JetBrains IDE for Go)
# Project files and workspace settings
.idea/
*.iml
*.iws

# GoLand local history
.idea/workspace.xml
.idea/tasks.xml
.idea/dictionaries
.idea/shelf

# GoLand-specific generated files
.idea/httpRequests/

# RustRover-specific ignores (JetBrains IDE for Rust)
# Same as GoLand since RustRover is also JetBrains-based
.idea/
*.iml

# RustRover local history (same as GoLand)
.idea/workspace.xml
.idea/tasks.xml

# Editor-specific ignores
# VS Code settings
.vscode/

# Emacs backup files
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
.elc
auto-save-list
tramp
.\#*

# Vim swap files
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-v][a-z]
[._]sw[a-p]

# Environment files (since you're loading configs from env)
.env
*.env.local
*.env.development.local
*.env.test.local
*.env.production.local

# Logs
*.log
logs/
log/

# Miscellaneous
# Dependency directories (if not using Go modules)
deps/
vendor/

# Ignore local test data or temporary files
tmp/
temp/
*.tmp
*.bak
*.swp

